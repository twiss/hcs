This is a draft of the specification.


HTTPS Content Signatures

The HTTPS Content Signatures extension provides a means of specifying
the HTTPS Response Bodies a server is supposed to return for given
paths. Together with Certificate Transparency, the use of this extension
makes it possible for users of a website to be notified of changes to
security-critical parts of the website, even if those changes are only
served to a small number of users.

This extension consists of a set of (path, hash) pairs.  The path of
each pair may be either an absolute path, such as "/index.js?arg=1%3F",
in which case it applies to all domain names using the certificate, or a
fully qualified URL, such as "https://example.com/index.js?arg=1%3F".
The hash of each pair is in the same format as defined in the
Subresource Integrity specification [SRI].

A user agent supporting this extension MUST NOT process any response to
a request to a path included in this extension and MUST show a un-
circumventable security error instead if either of the following happen:

(1) The user agent receives an ok status code (2xx), and the response
    body does not match the specified hash.

    Note that after a redirect, including e.g. a cached 301 redirect,
    the response body at the new location must still match the hash
    specified for the old location.

(2) The user agent receives an error status code (4xx or 5xx) and the
    request is a navigation request as defined in [FETCH] (e.g., an HTML
    404 document) and the response body does not match the specified
    hashes.

    Note that 4xx or 5xx responses to non-navigation requests, such as
    scripts, are allowed to have any body (including a body that doesn't
    match any hash) in the understanding that the user agent will not
    process the response body in any way regardless of this
    specification.

In order to maintain backwards compatibility, this extension SHOULD NOT
be marked critical.

id-ce-httpsContentSignatures OBJECT IDENTIFIER ::=  { id-ce 66 }

HttpsContentSignatures ::= SET {
  hashes SEQUENCE {
    path UTF8String,
    hash UTF8String } }


[SRI]: https://www.w3.org/TR/SRI/
[FETCH]: https://fetch.spec.whatwg.org/